<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>